<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>